<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>